<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>